<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBox2.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>